<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>